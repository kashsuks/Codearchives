{
    "id": "2",
    "title": "Graphville's Roadblocks",
    "difficulty": 5,
    "timeLimit": "1s",
    "memoryLimit": "512mb",
    "tags": ["trees", "dfs", "subtree size", "graph"],
    "description": "In the kingdom of Graphoria, there are `N` cities and `N - 1` bidirectional roads connecting them in a way that forms a tree. Each road has a toll associated with it. A roadblock is a special edge that, when removed, splits the tree into two disconnected components. The king wants to know the total toll value of all roadblocks that, if removed, would increase the size of the smaller component to at least `K` (where `K` ≤ N/2). In other words, for each edge, if removing it divides the tree into two components of sizes `s` and `N - s`, and `min(s, N - s)` ≥ `K`, add its toll to the final sum.",
    "inputSpec": "First line: two integers `N` and `K` (2 ≤ `N` ≤ 2×10⁵, 1 ≤ `K` ≤ N/2)\nNext `N - 1` lines: each contains three integers `u`, `v`, and `t` — a road between cities u and v with toll t (1 ≤ u, v ≤ N, 1 ≤ t ≤ 10⁴)",
    "outputSpec": "Output a single integer: the sum of tolls of all roadblocks that split the kingdom into valid parts as defined.",
    "image": "2sample.png",
    "samples": [
      {
        "input": "6 2\n1 2 3\n1 3 2\n2 4 1\n2 5 4\n3 6 5",
        "output": "12"
      }
    ],
    "notes": "Removing edge: \n1-2 → components of size 3 and 3 → valid(add 3)\n1-3 → components of size 4 and 2 → valid (add 2)\n2-4 → components of size 5 and 1 → invalid\n2-5 → same → invalid\n3-6 → size 5 and 1 → invalid\nTotal toll = 3 + 2 + 7"
}